"""
Django settings for I_am_MAtrix project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#4+%8y@sobdf1$f%l5dn2ah6599%6&lgby!3$#&vkira_09)28'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Main_page.apps.MainPageConfig',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'I_am_MAtrix.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'I_am_MAtrix.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR,'static')
STATIC_DIRS = []

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

if DEBUG:
    MIDDLEWARE += [
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    ]
    INSTALLED_APPS += [
        'debug_toolbar',
    ]
    INTERNAL_IPS = ['127.0.0.1', ]

    # this is the main reason for not showing up the toolbar
    import mimetypes
    mimetypes.add_type("application/javascript", ".js", True)

    DEBUG_TOOLBAR_CONFIG = {
        'INTERCEPT_REDIRECTS': False,
    }



import os
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "I_am_MAtrix.settings")


from django.core.wsgi import get_wsgi_application
application = get_wsgi_application()



#bot settings
    
from Main_page.models import *
key = '1857719214:AAFdr9bYxDlQiLKDi6otg8CGcWfJPHJOAnk'

start_chatting = """Привет! Я GIDA BOT, виртуальный ассистент, специализирующийся на 3D-моделировании.
Если ты пройдешь небольшой тест, то я смогу подобрать программу для тебя!
Чтобы начать тест, нажми "Поехали"! """

qustions = ["Какое устройство вы планируете использовать для 3D-моделирования?",
"Планируете ли вы использовать платное (или бесплатное приложение)?",
"Как вы планируете использовать 3D модели?",
"Какой вид моделирования вас интеремует?",
"Насколько углубленно вы собираетесь изучать 3D-моделирование?",
"Допускаете ли вы возможность использования готовых объектов в создании модели?"
]
def pull_datas(nameT):
    table = AnswersTable.objects.get(name=nameT)
    list_of_datas = list()
    list_of_datas.append(table.answer1)
    list_of_datas.append(table.answer2)
    list_of_datas.append(table.answer3)
    list_of_datas.append(table.answer4)
    list_of_datas.append(table.answer5)
    return list_of_datas
answers = {
    'devices':pull_datas('devices'),
    'cost':pull_datas('cost'),
    'using':pull_datas('using'),
    'type':pull_datas('type'),
    'experience':pull_datas('experience'),
    'prefabs':pull_datas('prefabs'),
}

price = """Укажите пожалуйста ваш бюджет, который вы можете выделить для приобретения программы."""
priceSubscribe = """Укажите пожалуйста сумму, которую вы сможете выделять на программу ежегодно."""

ChooseProgramDict = {
    'devices':['PC', 'Laptop', 'Phone'],
    'cost':['Free', 'Pay'],
    'subscription':[True, False],
    'pay':[0],
    'using':['Series', 'VideoGames', 'Models'],
    'typeOfModeling':['Solid', 'Polygonal', 'Sculpting'],
    'experience':['Deep', 'Surface'],
    'prefabs':['Help', 'Yourself']
}
endList = list()
programsList = ProgramsForBot.objects.all()
programsListForBot = dict()
for i in programsList:
    programsListForBot[str(i.name)] = [
        i.settingsOfProgram.devices,
        i.settingsOfProgram.cost,
        i.settingsOfProgram.subscription,
        i.settingsOfProgram.pay,
        i.settingsOfProgram.using,
        i.settingsOfProgram.typeOfModeling,
        i.settingsOfProgram.experience,
        i.settingsOfProgram.prefabs,
        i.name
    ]
